//
//  CustomVC.m
//  ZHYJAPP
//
//  Created by shuang wu on 16/9/28.
//  Copyright © 2016年 admin. All rights reserved.
//

#import "CustomVC.h"
#import "NetworkManager.h"
#import "DataManager.h"
#import "DataEncoding.h"
#import "ZHYJLocalCache.h"
#import "ZHYJLoginViewController.h"
#import <CoreLocation/CoreLocation.h>
//#import <CloudPushSDK/CloudPushSDK.h>

#import "Reachability.h"
#import "RedpacketViewControl.h"


#import "CustomNavView.h"
#import "MyVC.h"
#import "CustomDetalVC.h"
#import "Custom_Document_VC.h"


#import "CustomerNavPushView.h"

#import "QuickViewController.h"

#import "UIWebView+JavaScriptAlert.h"


static NSString *const sUserIconKey = @"UserIcon";
@interface CustomVC ()<UIWebViewDelegate, UINavigationControllerDelegate, CLLocationManagerDelegate>
{
    UIWebView *_webView;
    NSString  *_urlString;
    NSMutableDictionary *_userIcon;
    CLLocationManager *_locationManager;
    NSMutableArray *userLocationArr;
    UIButton *showButton;
    
    
}
@property (nonatomic,retain) NSURLConnection *aSynConnection;
@property (nonatomic,retain) NSInputStream *inputStreamForFile;
@property (nonatomic,retain) NSString *photoFilePath;

@end

@implementation CustomVC

- (void)viewDidLoad {
    [super viewDidLoad];
    _urlString = @"customer.html";
    
   
    
    
    [self setNav];
    
    [self initWebView];
    
//        [self loadWebview:@"customer.html"];
    
    
    //    _locationManager = [[CLLocationManager alloc] init];
    //    [_locationManager requestAlwaysAuthorization];
    //    _locationManager.delegate = self;
    //    [_locationManager startUpdatingLocation];
    
}


- (void)initWebView{
    
    if (!_webView) {
       
        _webView = [UIWebView initWithSet];
        _webView.delegate = self;
        [self.view addSubview:_webView];
        
    }
   
  
    //    从mainBundle里取本地html文件
    NSString *mainBundlePath = [[NSBundle mainBundle] bundlePath];
    NSString *htmlPath = [NSString stringWithFormat:@"%@/%@", mainBundlePath,_urlString];
    NSURLRequest *request = [[NSURLRequest alloc] initWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"file://%@",[htmlPath stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding]]]];
    
    [_webView loadRequest:request];
  
    
    _userIcon = [NSMutableDictionary dictionary];
    [DataManager sharedDataManager].putDic = [NSMutableDictionary dictionary];
    
}

- (void)setNav{
 
    CustomNavView *customNavView = [[CustomNavView alloc]initWithFrame:CGRectMake(0, 20, self.view.frame.size.width, 44) withButtonTag:^(NSInteger buttonTag) {

        switch (buttonTag) {
                
            case 8:{
                MyVC *myVC = [[MyVC alloc]init];
                myVC.urlSS = @"myset.html";
                [self.navigationController pushViewController:myVC animated:YES
                 ];
                
            }
                break;
                
                
            case 9:{
                [self rightClick];
                
            }
                break;
                
            case 10:{
                
            }
                break;
            case 11:{
                [self pushCustomerDetailVCWithUrl:@"crm/Hot_customer.html"];
                
            }
                break;
            case 12:{
                [self pushCustomerDetailVCWithUrl:@"crm/Sales_opportunities.html"];
               
            }
                break;
            case 13:{
                  [self pushCustomerDetailVCWithUrl:@"crm/cusFile.html"];
      
            }
                break;
            case 14:{
                
                [self pushCustomerDetailVCWithUrl:@"crm/catchFile.html"];
    
            }
                break;
            default:
                break;
        }
      
    }];
    
    self.navigationItem.titleView =  customNavView;
    
  
}

- (void)pushCustomerDetailVCWithUrl:(NSString *)urlStr{
    
    if (urlStr) {
        
        CustomDetalVC *custumDetalVc = [[CustomDetalVC alloc] init];
        custumDetalVc.urlStr = urlStr;
        
        [self.navigationController pushViewController:custumDetalVc animated:YES];
        
    }
}

- (void)rightClick{

   
//    CustomerNavPushView *customerNavPushView = [[CustomerNavPushView alloc]initWithFrame:CGRectMake(0, 0, self.view.frame.size.width, 88) With:^(NSInteger buttonTag) {
//        
//        [self pushCustomerDetailVCWithUrl:@"crm/contractManage.html"];
//        
//    }];
//    [self.view addSubview:customerNavPushView];
    
    
#warning TEST
    QuickViewController *quickVC = [[QuickViewController alloc]init];
    [self.navigationController pushViewController:quickVC animated:YES
     ];
    
}


#pragma mark -- CLLocationManagerDelegate

//定位
//- (void)locationManager:(CLLocationManager *)manager didUpdateLocations:(NSArray<CLLocation *> *)locations
//{
//    CLLocation *location = [locations lastObject];
//    CLLocationCoordinate2D coordinate = location.coordinate;
//    NSString *latitude = [NSString stringWithFormat:@"%f", coordinate.latitude];
//    NSString *longitude = [NSString stringWithFormat:@"%f", coordinate.longitude];
//    //    NSLog(@"纬度:%@", latitude);
//    [self userLocationTrans:longitude latitude:latitude];
//    // 2.停止定位
//    [manager stopUpdatingLocation];
//}
////谷歌地图经纬度转百度地图经纬度
//- (void)userLocationTrans:(NSString *)longitude latitude:(NSString *)latitude
//{
//    //    NSString *str = [NSString stringWithFormat:@"http://api.map.baidu.com/ag/coord/convert?from=0&to=4&x=%@&y=%@", longitude, latitude];
//    //    NSLog(@"--%@", str);
//    //请求接口转换经纬度
//    NSURL *url = [NSURL URLWithString:[NSString stringWithFormat:@"http://api.map.baidu.com/ag/coord/convert?from=0&to=4&x=%@&y=%@", longitude, latitude]];
//
//    NSURLSessionDataTask *task = [[NSURLSession sharedSession] dataTaskWithRequest:[NSURLRequest requestWithURL:url] completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error) {
//        NSLog(@"loca%@  *****%@", error, response);
//        if (error == nil) {
//            NSDictionary *resultDic = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingMutableContainers error:nil];
//            if (![[resultDic allKeys] containsObject:@"error"]) {
//                NSString *longitude = [DataEncoding decodeInBase64:resultDic[@"x"]];
//                NSString *latitude = [DataEncoding decodeInBase64:resultDic[@"y"] ];
//                //        NSLog(@"---更改后的坐标: %@, %@", longitude, latitude);
//                userLocationArr = [NSMutableArray array];
//                [userLocationArr addObject:longitude];
//                [userLocationArr addObject:latitude];
//                [DataManager sharedDataManager].userLocation = userLocationArr;
//            }
//
//        }else{
//        }
//    }];
//    [task resume];
//}

#pragma mark -- UIWebViewDelegate
//准备加载，拦截url
- (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType
{//多次调用shouldStartLoad,是因为js文件里使用了自定义url的方式
    NSString *requestString = [[request URL] absoluteString];
    NSLog(@"--------requestString:%@", requestString);
    
    NSArray *unidArray = [requestString componentsSeparatedByString:@"?unid="];
    NSString *urlStr;
  
    // 首页点击跳转
    if (unidArray.count > 1) {
        
        if ([_urlString isEqualToString:@"customer.html"]) {
            
            if ([unidArray.firstObject hasSuffix:@"crm/catchFile_document.html"]) {
                
                urlStr = @"crm/catchFile_document.html";
            }
            
        }
        
        Custom_Document_VC *customDocumentVC = [[Custom_Document_VC alloc]init];
        customDocumentVC.urlStr = [NSString stringWithFormat:@"%@?unid=%@",urlStr,unidArray.lastObject];
        
        [self.navigationController pushViewController:customDocumentVC animated:YES];
        
        return NO;
        
    }
    
    
    
    //提交数据,页面调用app.postData
    if ([requestString hasPrefix:@"posturl"]) {
        [self postDataWithRequestStr:requestString];
        return YES;
    }
    //退出登录,页面调用app.logout
    if ([requestString hasPrefix:@"logouturl"]) {
        NSLog(@"%@", requestString);
        [self logoutWithRequestStr:requestString];
        return YES;
    }
    //调用相机,页面调用jsFunc的photo.takePhoto方法
    //    if ([requestString hasPrefix:@"takephotourl"]) {
    //        [self takePhotoWithRequestStr:requestString];
    //        return YES;
    //    }
    //页面切换时调用
    if ([requestString hasPrefix:@"puturl"]) {
        [self putWithRequestStr:requestString];
        return YES;
    }
    //判断是否是红包跳转 是跳转到红包页面
    if ([requestString hasSuffix:@"hongbao.html"]) {
        UIViewController *controller = [RedpacketViewControl changeMoneyController];
        UINavigationController *nav = [[UINavigationController alloc] initWithRootViewController:controller];
        [self presentViewController:nav animated:YES completion:nil];
    }
    
    return YES;
}
//开始加载
- (void)webViewDidStartLoad:(UIWebView *)webView
{
}
//加载完成
- (void)webViewDidFinishLoad:(UIWebView *)webView {
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPad){
        //        [_webView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.webkitTextSizeAdjust= '120%'"];
    }else{
    }
    
    //webview加载完成后移除黑色视图，否则会覆盖本地html的导航栏
    //Html当中的js代码会引起内存泄露,设置缓存
    [[NSUserDefaults standardUserDefaults] setInteger:0 forKey:@"WebKitCacheModelPreferenceKey"];
    // WebView放到最上层
    [self.view bringSubviewToFront:_webView];
}

#pragma mark - 与JS交互
//页面切换
- (void)putWithRequestStr:(NSString *)requestString
{
    NSArray  *parts = [requestString componentsSeparatedByString:@"$$$"];
    NSString *key   = [parts objectAtIndex:1];
    NSString *value = [parts objectAtIndex:2];
    NSMutableDictionary *putDic = [NSMutableDictionary dictionaryWithObjectsAndKeys:value, key, nil];
    //将取到的键值对累加到字典
    [[DataManager sharedDataManager].putDic addEntriesFromDictionary:putDic];
    //    NSLog(@"保存的key：%@", putDic[key]);
}

//提交数据
- (void)postDataWithRequestStr:(NSString *)requestString
{
    NSArray  *components = [requestString componentsSeparatedByString:@"$$$"];
    NSString *urlString = [components objectAtIndex:1];//请求路径
    NSString *params = [components objectAtIndex:2];//请求参数
    //    NSString *callback = [components objectAtIndex:3];//回调函数
    NSRange range = [params rangeOfString:@"back"];//匹配得到的下标
    //    NSLog(@"rang:%@",NSStringFromRange(range));
    NSString *callback = [params substringWithRange:range];//截取范围类的字符串
    //    NSLog(@"截取的值为：%@",str);
    
    urlString = [urlString stringByReplacingOccurrencesOfString:@"app.server_address" withString:[DataManager sharedDataManager].hostString];
    urlString = [urlString stringByReplacingOccurrencesOfString:@"app.ou" withString:[DataManager sharedDataManager].userMsg[@"ou"]];
    params = [params stringByReplacingOccurrencesOfString:@"app.ou" withString:[DataManager sharedDataManager].userMsg[@"ou"]];
    NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:urlString]];
    
    //所有网络请求都需要带cookie
    NSString *cookie = [[DataManager sharedDataManager] cookieValue];
    [request setValue:cookie forHTTPHeaderField:@"Cookie"];
    request.HTTPMethod = @"POST";
    //    NSLog(@"%@", request.allHTTPHeaderFields);
    // 设置请求体
    // NSString --> NSData
    
    request.HTTPBody = [params dataUsingEncoding:NSUTF8StringEncoding];
    [NetworkManager networkWithRequest:request completion:^(id responseObject, NSURLResponse *response, NSError *error) {
        if (error == nil) {
            NSString *dataString = [[NSString alloc] initWithData:responseObject encoding:NSUTF8StringEncoding];
            NSString *jsFunc=[callback stringByAppendingFormat:@"%@%@%@",@"(",dataString,@")"];
            // NSLog(@"提交数据jsFunc: %@", jsFunc);
            dispatch_async(dispatch_get_main_queue(), ^{
                [_webView stringByEvaluatingJavaScriptFromString:jsFunc];
            });
        }else{
            dispatch_async(dispatch_get_main_queue(), ^{
                UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"温馨提示" message:@"网络请求错误" delegate:self cancelButtonTitle:@"确定" otherButtonTitles:nil];
                [alert show];
            });
        }
    }];
}

//退出登录
- (void)logoutWithRequestStr:(NSString *)requestString
{
    //清除用户信息
    [[DataManager sharedDataManager] clearUsername:nil andPwd:nil];
    [[DataManager sharedDataManager] saveUserMsg:nil];
    [[DataManager sharedDataManager] saveCookie:nil];//清除保存的cookie
    [DataManager sharedDataManager].putDic = nil;
    
    NSHTTPCookie *cookie;
    NSHTTPCookieStorage *storage = [NSHTTPCookieStorage sharedHTTPCookieStorage];
    //遍历清除缓存机制里的所有cookie,有两个cookie元素
    for (cookie in [storage cookies]) {
        [[NSHTTPCookieStorage sharedHTTPCookieStorage] deleteCookie:cookie];
    }
    NSArray *cookieArray = [NSHTTPCookieStorage sharedHTTPCookieStorage].cookies;
    NSLog(@"清除后：%@, %@", cookie, cookieArray);
    //清除UIWebView的缓存
    [[NSURLCache sharedURLCache] removeAllCachedResponses];
    //解除推送绑定
    //    [CloudPushSDK unbindAccount:^(CloudPushCallbackResult *res) {
    //        if (res.success) {
    //            [[NSUserDefaults standardUserDefaults] setObject:nil forKey:@"bindAccount"];
    //            [[NSUserDefaults standardUserDefaults] synchronize];
    //        }
    //    }];
    
    // 跳到登录界面
    ZHYJLoginViewController *loginVC = [ZHYJLoginViewController new];
    //切换rootViewController
    [UIApplication sharedApplication].keyWindow.rootViewController = loginVC;
}

//拍照
- (void)takePhotoWithRequestStr:(NSString *)requestString
{
    if([UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera])
    {
        // 创建UIImagePickerController实例
        UIImagePickerController *imagePickerController = [[UIImagePickerController alloc] init];
        // 设置代理
        imagePickerController.delegate = self;
        // 是否允许编辑（默认为NO）
        //        imagePickerController.allowsEditing = YES;
        imagePickerController.sourceType = UIImagePickerControllerSourceTypeCamera;
        // 设置进入相机时使用前置或后置摄像头
        imagePickerController.cameraDevice = UIImagePickerControllerCameraDeviceRear;
        [self presentViewController:imagePickerController animated:YES completion:nil];
    }
}

#pragma mark - UIImagePickerControllerDelegate

//更改状态栏字体为白色  (默认为黑色)
- (UIStatusBarStyle)preferredStatusBarStyle
{
    return UIStatusBarStyleLightContent;
}
//释放webview
- (void)dealloc
{
    _webView.delegate = nil;
    [_webView stopLoading];
}


- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}



@end
